package org.seasar.doma.internal.apt.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public class ConcretePostIterationCallbackDaoImpl extends org.seasar.doma.internal.jdbc.dao.AbstractDao implements org.seasar.doma.internal.apt.dao.ConcretePostIterationCallbackDao {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    /** */
    public ConcretePostIterationCallbackDaoImpl() {
        super(new org.seasar.doma.internal.apt.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public ConcretePostIterationCallbackDaoImpl(java.sql.Connection connection) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public ConcretePostIterationCallbackDaoImpl(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected ConcretePostIterationCallbackDaoImpl(org.seasar.doma.jdbc.Config config) {
        super(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected ConcretePostIterationCallbackDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        super(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected ConcretePostIterationCallbackDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        super(config, dataSource);
    }

    @Override
    public <R extends java.lang.Number> R iterate(org.seasar.doma.internal.apt.dao.ConcretePostIterationCallback<R, java.lang.String> callback) {
        entering("org.seasar.doma.internal.apt.dao.ConcretePostIterationCallbackDaoImpl", "iterate", callback);
        try {
            if (callback == null) {
                throw new org.seasar.doma.DomaNullPointerException("callback");
            }
            org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery __query = new org.seasar.doma.internal.jdbc.query.SqlFileSelectQuery();
            __query.setConfig(config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/ConcretePostIterationCallbackDao/iterate.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.ConcretePostIterationCallbackDaoImpl");
            __query.setCallerMethodName("iterate");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.prepare();
            org.seasar.doma.internal.jdbc.command.SelectCommand<R> __command = new org.seasar.doma.internal.jdbc.command.SelectCommand<R>(__query, new org.seasar.doma.internal.jdbc.command.BasicIterationHandler<R, java.lang.String>(new org.seasar.doma.wrapper.StringWrapper(), callback));
            R __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.ConcretePostIterationCallbackDaoImpl", "iterate", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.ConcretePostIterationCallbackDaoImpl", "iterate", __e);
            throw __e;
        }
    }

}
